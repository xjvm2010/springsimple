<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
			PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 
	xml 파일의 구조
		1. [필수] 	첫번째 줄에는 반드시 헤더가 존재해야 한다.
			<?xml version="1.0" encoding="UTF-8" ?>
		2. [선택]		DTD파일이나 스키마 파일을 선언한다. (day04.txt 파일 참고 )
		3. [필수]		xml 파일은 반드시 단하나의 루트 태그를 가져야 한다.
					루트 태그는 사용하는 스키마나 DTD 에서 정해놓은 것만 사용할 수 있다.
 
-->

<!--
	namespace 란?
		이 파일과 같은 질의명령을 작성해 놓은 xml 파일이 여러개 존재할 경우
		각각의 질의 명령은 구분이 되어야 할 것이고
		그보다 먼저 각각의 문서가 구분이 되어야 할 것이다.
		그때 각 문서를 구분할 목적으로 별칭을 부여하는 방법이 루트 태그에 namespace 속성을 부여하는 것이다.
		
		***
		각각의 SQL xml 파일마다 namespace 값은 모두 달라야 할 것이다.
		
		지정하는 방법
			1. 일반 문자로 지정하는 방법
				==> mSQL
				
			2. 패키지 형태로 지정하는 방법
				==> com.simple.member.???.???
-->
<mapper namespace="mSQL">
<!--
 
		이 파일은 데이터베이스에게 보낼 질의명령을 저장할 파일이다.
		따라서 내부에 SQL문(질의명령)을 하나씩 작성해 나가면 된다.
		
		문제는 지금 사용하는 문서는 xml문서이다.
		따라서 하위 태그가 존재한다.
		
		질의 명령에 사용되는 태그
			select, insert, update, delete, sql
			
		=========================================================
		각각의 질의 명령 태그에는 필수 속성
				id="???"
			라는 속성이 존재해야 하고
			이 id 속성은 이 문서는 질의 명령들을 모아놓은 파일이기 때문에
			다수의 질의 명령이 작성되어서 저장이 될 것이다.
			그때 각각의 질의 명령을 구분할 목적으로 부여하는 속성이 id 속성이다.
			이때 id 속성에 부여하는 값은 다른 질의 명령의 id와 반드시 달라야 한다.
		
		보조속성
			1. resultType="???"
				==> 질의 명령의 결과가 어떤 데이터 형태로 나올지 지정하는 속성
				
				주의 사항 ]
					질의명령의 결과가 다중행으로 나오더라도 
					단일행의 데이터를 어떻게 담을지만 생각하면 된다.
					
					예]
						SELECT
							m_id
						FROM
							member
						
						이런 질의 명령이 있다면
						한행의 결과를 저장할 타입으로 문자열로 지정해서
						resultType="String"
						으로 지정하면 된다.
						이때 여러명에 대한 데이터 타입은 마이바티스에서 리스트로 처리해서 반환해주는데
						그 리스트에 각각 한명의 데이터에 해당하는 문자열을 추가해서 리스트를 만들어서 반환해주게 된다.
						
			2. parameterType
				==> 질의명령에 채워야 할 데이터가 존재할 경우(? 가 있을 경우) 채울 데이터의 타입을 지정하는 것
					
					문제는 한개의 데이터가 필요하다면 해당 타입을 지정하면 되지만
					두개 이상의 데이터가 필요하면 문제가 된다.
					왜냐하면 parameterType에는 타입을 하나만 기술할 수 있기 때문이다.
					이때는 VO(DTO)클래스에 데이터를 담아서 하나의 타입을 만든후 기술하면 된다.
					
					참고]
						resultType, parameterType 을 지정할때는
						원칙적으로 자바의 클래스 경로를 모두 적어야 한다.
							예]
								com.simple.www.vo.MemberVO
						
						이렇게 사용하면 코드의 길이가 길어지고 불편할 것이다.
						
						해결방법 ]
							1. mybatis에서 미리 정의해놓은 타입을 사용하면 된다.
							
							2. mybatis-config.xml 파일에 사용자가 직접 별칭을 부여해서 사용하는 방법
								<typeAliases>
									<typeAlias alias="???" type="경로" />
								</typeAliases>
-->
			<!-- 로그인 질의문 -->
	<select id="Login" resultType="int" parameterType="mVO">
		SELECT
			count(*) cnt
		FROM
			member
		WHERE
			m_id = #{id}
			AND m_pw = #{pw}
	</select>
	<!-- 
		mybatis 에서는 JSP에서 사용하던 것 처럼 변동 데이터에 ?를 사용해서 처리하지 않는다.
			형식]
				#{변수이름}
			이때 변수이름은 DAO클래스의 함수에서 해당 질의명령을 불러오면서 입력해주는 데이터의 변수이름을 그대로 사용하던지
			또는 VO 클래스 내부에 정의되어있는 변수이름을 사용하면 된다.
			문제는 VO클래스의 해당변수는 접근지정자가 private 일 것이고.
			그 범위는 클래스 내부로 한정되어 진다.
			이때 마이바티스는 자동으로 해당 변수의 getter 함수를 호출해서 
	 -->
		<!-- 중복확인 질의문 -->
	<select id="idCount" resultType="mVO" parameterType="String">
		SELECT
			count(*) cnt
		FROM
			member
		WHERE
			m_id = #{id}
	</select>
	
	<select id="showName" parameterType="mVO" resultType="String">
		SELECT
			m_name
		FROM
			member
		WHERE
			m_no = #{mno}
	</select>
	
	<select id="showId" resultType="mVO">
		SELECT
			m_id id, (SELECT a_img FROM avatar WHERE a_no = m_avt) avt
		FROM
			member
	</select>
	
	
	<insert id="addMember" parameterType="mVO">
		<selectKey keyProperty="mno" resultType="int" order="BEFORE">
			SELECT
				NVL(MAX(m_no) + 1, 1001)
			FROM
				member
		</selectKey>
		INSERT INTO
			member
		VALUES(
			#{mno}, #{id}, #{pw}, #{name}, 
			#{mail}, #{tel}, sysdate, #{avt}, #{gen}
		)
	</insert>
	
	<insert id="addPic" parameterType="fVO">
		<selectKey keyProperty="pno" resultType="int" order="BEFORE">
			SELECT
				NVL(MAX(p_no) + 1, 1000001)
			FROM
				m_photo
		</selectKey>
		INSERT INTO
			m_photo(
				p_no, p_mno, p_oriname, p_savename, 
				p_len, p_dir
			)
		VALUES(
			#{pno}, #{mno}, #{oriName}, #{saveName}, #{len}, #{dir}
		)
	</insert>
	
	<update id="editInfo" parameterType="mVO"> <!-- 회원정보수정 -->
		UPDATE
			member
		<trim prefix="SET" suffixOverrides=",">
			<if test="pw != null">m_pw = #{pw},</if>
			<if test="mail != null">m_mail = #{mail},</if>
			<if test="tel != null">m_tel = #{tel},</if>
			<if test="avt != 0">m_avt = #{avt},</if>
		</trim>
		WHERE
			m_no = #{mno}
	</update>
	
	
	<select id="membInfo" resultType="mVO" parameterType="string">
		SELECT
			m_no mno, m_id id, m_name name, m_mail mail,
			m_tel tel, to_char(m_join, 'yyyy-mm-dd HH24:MI:ss') sDate, 
			m_avt avt, a_img avatar
		FROM
			member, avatar
		WHERE
			m_avt = a_no
			AND m_id = #{id}
	</select>
	
	<select id="boardlist" resultType="bVO">
		SELECT
			bno, title, bbody, bdate, (SELECT m_id FROM member WHERE m_no = mno) id
		FROM
			board
		WHERE
			isshow='Y'
		ORDER BY bno desc
	</select>
	
	<select id="gallerylist" resultType="gVO">
	
		SELECT
    		gno, gtitle title, gdir dir, gsavename saveName, (SELECT m_id FROM member WHERE m_no = gmno) id
		FROM
    		gallery
    	order by gno desc
    	
	</select>
	
	
	<insert id="boardwrite" parameterType="bVO">
	<selectKey keyProperty="mno" resultType="int" order="BEFORE">
		SELECT
			m_no
		FROM
			member
		WHERE
			m_id = #{id}
	</selectKey>
		INSERT INTO
			board(bno, mno, title, bbody)
		VALUES
			( (SELECT NVL(MAX(bno) + 1, 1001) FROM board) , #{mno},  #{title}, #{bbody})
	</insert>
	
	<insert id="addgallery" parameterType="gVO">
		<selectKey keyProperty="gmno" resultType="int" order="BEFORE">

			SELECT
				m_no
			FROM
				member
			WHERE
				m_id = #{id}
		</selectKey>
		INSERT INTO
			gallery(gno, gmno, goriName, gsaveName, gtitle, gbody, glen, gdir)
		VALUES
		(
			(SELECT NVL(MAX(gno) + 1, 1000001) FROM gallery ),
			#{gmno}, #{oriName}, #{saveName}, #{title}, #{body}, #{len}, #{dir}
		)
	</insert>
	
	<select id="gallerycontent" parameterType="int" resultType="gVO">
	
	</select>
</mapper>