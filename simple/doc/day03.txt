# day03

DI(Dependency Injection)
==> 우리말로 번역을 하자면
	의존 주입 이라고 번역이 되고
	어떤 클래스를 사용할 때
	그 클래스의 기능을 수행하는데 반드시 필요한 객체를
	스스로 new 시키지 않고
	다른 곳에서 new 시킨 것을 받아서 사용하는 방법
	
	스프링에서는 [ 빈 처리 ]라고 하여
	xml 파일에서 직접 필요한 클래스를 new 시키는 기능을 가지고 있다.
	
	예]
		<bean id="workRunner"
				class="net.midvirus.spring4.day01.WorkRunner" />
				
		==>
			WorkRunner workRunner = new WorkRunner();
			의 작업의 결과 같은 결과가 나온다.
			
=================================================================================

자동의존 주입
	==> <bean> 처리된 클래스를 필요한 곳에
		어노테이션을 이용해서 자동적으로 객체를 사용할 수 있도록 주입해주는 것.
		
	종류 ]
		
		1. @Autowired
			==> 모든 빈처리된 클래스를 자동으로 찾아서 주입하는 어노테이션
			
		2. @Qualifier
			==> 동일한 클래스가 여러번 빈처리 된 경우에
				특정 클래스를 선택하도록 하는 어노테이션
		
		3. @Resource
			==> 자동 주입할 클래스를 지정해서 주입하도록 하는 어노테이션
			
	참고 ]
		
		@Autowired
			==> 스프링 전용
			
		@Inject
			==> 자바 어플리케이션에서도 사용할 수 있는 어노테이션(스프링에서도 사용가능)
			
	참고 ]
		@Autowired 를 사용하는 지점
			
			1. 변수 생성하면서
			2. 생성자 함수 내에서
			3. set 함수 내에서 
			
			어디서 사용을 하던지 필요한 클래스가 자동 주입되는 것은 같다.
	
	***
	주의 ]
		@Autowired 는 선언한 다음줄에 한해서만 적용이 된다.
		
------------------------------------------------------------
	
	실습 ]
		
		1. 프로젝트 경로에 dao 패키지를 만든다.
		2. dao 패키지 내에 MemberDAO 클래스를 만든다.
		3. 만든 클래스를 빈처리를 한다.
			src/main/webapp/WEB-INF/spring/appServlet/daoContext.xml
	